{"version":3,"sources":["components/Card/News.module.css","api/cardsApi.ts","store/appReducer.ts","img/Vector.svg","components/News/SelectedNews.tsx","components/Plug/CountPlug.tsx","components/Home/Home.tsx","components/Card/News.tsx","App.tsx","store/store.ts","index.tsx","components/Home/Home.module.css","components/News/SelectedNews.module.css","components/Plug/Plug.module.css"],"names":["module","exports","getCards","countPage","id","axios","get","initialState","cards","isLoading","isLoadingAC","type","fetchCardsTC","dispatch","a","res","data","news","SelectedNews","image_small","date","title","navigate","useNavigate","ChangeDate","moment","format","className","styles","card","onClick","src","alt","block","Plug","container","value","Home","count","setLanguage","language","useDispatch","header","Vector","onChange","e","lang","label","options","grid","Array","fill","map","News","sumParams","useParams","objId","btn","length","el","blockCard","cardTitle","width","height","image_big","cardLead","ReactHtmlParser","lead","App","useSelector","state","useState","useEffect","path","element","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b239147.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"News_header__1tfaL\",\"title\":\"News_title__1H0N-\",\"btn\":\"News_btn__zLXEz\",\"blockCard\":\"News_blockCard__3MnHu\",\"cardTitle\":\"News_cardTitle__IYSTF\",\"cardLead\":\"News_cardLead__2DjDt\"};","import axios from 'axios';\r\nimport {objApiType} from '../components/type';\r\n\r\nexport const getCards = (countPage: number, id: number) => {\r\n    return axios.get<objApiType>(`https://news.itmo.ru/api/news/list/?ver=2.0&per_page=${countPage}&lead=true&language_id=${id}`)\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {getCards} from '../api/cardsApi';\r\nimport {ActionsType, cardType, InitialType} from '../components/type';\r\n\r\nconst initialState: InitialType = {\r\n    cards: [],\r\n    isLoading: false\r\n}\r\n\r\nexport const cardsReducer = (state: InitialType = initialState, action: ActionsType): InitialType => {\r\n    switch (action.type) {\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'SET-LOADING':\r\n            return {...state, isLoading: action.isLoading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setCardsAC = (cards: Array<cardType>) => ({\r\n    type: 'SET-CARDS',\r\n    cards\r\n} as const)\r\n\r\nexport const isLoadingAC = (isLoading: boolean) => ({\r\n    type: 'SET-LOADING',\r\n    isLoading\r\n} as const)\r\n\r\n// thunks\r\nexport const fetchCardsTC = (countPage: number, id: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(isLoadingAC(true))\r\n        const res = await getCards(countPage, id)\r\n        dispatch(setCardsAC(res.data.news))\r\n        dispatch(isLoadingAC(false))\r\n    }\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Vector.fbc03099.svg\";","import React from 'react';\r\nimport styles from './SelectedNews.module.css';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru'\r\nimport { PropsSelectedNewsType } from '../type';\r\n\r\n\r\n\r\nexport const SelectedNews = ({\r\n                                 image_small,\r\n                                 date,\r\n                                 title,\r\n                                 id\r\n                             }: PropsSelectedNewsType) => {\r\n    const navigate = useNavigate()\r\n    const ChangeDate = moment(date).format('LL')\r\n\r\n\r\n    return (\r\n        <div className={styles.card}\r\n             onClick={() => navigate(`/${id}`)}>\r\n            <img src={image_small} alt=\"img\"/>\r\n            <div className={styles.block}>\r\n                <p>{ChangeDate}</p>\r\n                <b>{title}</b>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport styles from './Plug.module.css'\r\n\r\nexport const countPlug = (count: number) => Array(count).fill(<Plug/>)\r\n\r\n\r\nconst Plug = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.block}></div>\r\n            <div className={styles.a}>\r\n                <div className={styles.value}></div>\r\n                <div className={styles.value}></div>\r\n                <div className={styles.value}></div>\r\n                <div className={styles.value}></div>\r\n                <div className={styles.value}></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n","import {useDispatch} from 'react-redux';\r\nimport React from 'react';\r\nimport {fetchCardsTC} from '../../store/appReducer';\r\nimport styles from './Home.module.css';\r\nimport Vector from '../../img/Vector.svg';\r\nimport {SelectedNews} from '../News/SelectedNews';\r\nimport Select from 'react-select'\r\nimport {countPlug} from '../Plug/CountPlug';\r\nimport {PropsHomeType, typeSelect} from '../type';\r\n\r\n\r\nexport const Home = ({\r\n                         countPage,\r\n                         cards,\r\n                         setLanguage, language,\r\n                         isLoading\r\n                     }: PropsHomeType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handlerSelect = (e: any) => {\r\n        const lang = e.value\r\n        setLanguage(lang.label)\r\n        dispatch(fetchCardsTC(countPage, lang))\r\n    }\r\n\r\n    const statusOptions: Array<typeSelect> = [\r\n        {value: '1', label: 'RU'},\r\n        {value: '2', label: 'ENG'}\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <header className={styles.header}>\r\n                <img src={Vector} alt=\"Logo\"/>\r\n                <Select\r\n                    value={language}\r\n                    onChange={handlerSelect}\r\n                    options={statusOptions}/>\r\n            </header>\r\n            <h1 className={styles.title}>Новости и события</h1>\r\n            <div className={styles.grid}>\r\n                {isLoading\r\n                    ? countPlug(countPage)\r\n                    : cards?.map(card => <SelectedNews\r\n                        key={card.id}\r\n                        id={card.id}\r\n                        image_small={card.image_small}\r\n                        date={card.date}\r\n                        title={card.title}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport styles from './News.module.css';\r\nimport Vector from '../../img/Vector.svg';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { PropsNewsType } from '../type';\r\n\r\n\r\n\r\nexport const News = ({cards}: PropsNewsType) => {\r\n    const sumParams: { id: string | undefined } = useParams()\r\n    const navigate = useNavigate()\r\n    const objId = sumParams.id\r\n    const goBack = () => {navigate(-1)}\r\n    return (\r\n        <>\r\n            <header className={styles.header}>\r\n                <button className={styles.btn} onClick={goBack}>\r\n                    Вернуться назад\r\n                </button>\r\n                <h1 className={styles.title}>\r\n                    Новость\r\n                </h1>\r\n                    <img src={Vector} alt=\"Logo\"/>\r\n            </header>\r\n\r\n            {cards.length > 0 && cards.map(el => objId && el.id === +objId &&\r\n                <div className={styles.blockCard} key={el.id}>\r\n                    <div className={styles.cardTitle}>{el.title}</div>\r\n                    <img width={800} height={553} src={el.image_big} alt=\"img\"/>\r\n                    <div className={styles.cardLead}>\r\n                        {ReactHtmlParser(el.lead)}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport './components/Home/Home.module.css';\nimport {Route, Routes} from 'react-router-dom';\nimport {Home} from './components/Home/Home';\nimport {News} from './components/Card/News';\nimport {fetchCardsTC} from './store/appReducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from './store/store';\nimport { cardType } from './components/type';\n\n\nfunction App() {\n    const cards = useSelector<AppRootStateType, Array<cardType>>((state) => state.cards.cards)\n    const isLoading = useSelector<AppRootStateType, boolean>((state) => state.cards.isLoading)\n    const [language, setLanguage] = useState({value: '1', label: 'RU '})\n    const dispatch = useDispatch()\n\n    const mainLangId = 1\n    const countPage = 9\n\n    useEffect(() => {\n        dispatch(fetchCardsTC(countPage, mainLangId))\n    }, [])\n\n    return (<Routes>\n            <Route path=\"/\"\n                   key={null}\n                   element={\n                       <Home cards={cards}\n                             language={language}\n                             countPage={countPage}\n                             isLoading={isLoading}\n                             setLanguage={setLanguage}/>\n                   }/>\n            <Route path=\"/:id\" key={null} element={<News  cards={cards}/>}\n            />\n        </Routes>\n    );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {cardsReducer} from './appReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cards: cardsReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './store/store';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Home_header__1uM3u\",\"title\":\"Home_title__3M6TE\",\"grid\":\"Home_grid__2sDMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SelectedNews_card__2pCcY\",\"block\":\"SelectedNews_block__32rj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Plug_container__3Ppv4\",\"block\":\"Plug_block__1wfdu\",\"a\":\"Plug_a__647Zl\",\"value\":\"Plug_value__23zhQ\"};"],"sourceRoot":""}